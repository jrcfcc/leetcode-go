package offer

/*
一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。
答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

动态规划
dp[n] 表示青蛙跳上第n级台阶的跳法
在青蛙跳上第n级台阶之前,有可能是从第n-1级台阶跳上来的,也可能是从第n-2级台阶跳上来的
那么dp[n] = dp[n-1] + dp[n-2],也就是斐波那契数列
*/
func numWays(n int) int {
	if n <= 1 {
		return 1
	}
	var dp_n,dp_0,dp_1 = 1,1,1
	for i:=2;i<=n;i++{
		dp_n = (dp_0 + dp_1)%1000000007
		dp_0,dp_1 = dp_1,dp_n
	}
	return dp_n%1000000007
}
